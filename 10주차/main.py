# threshold는 0.65로 설정하였습니다!

import os
import matplotlib.pyplot as plt
import pefile

def getIAT(filename):
    function_names = []
    pe = pefile.PE(filename)
    for entry in pe.DIRECTORY_ENTRY_IMPORT:
        for function in entry.imports:
            try:
                function_names.append(entry.dll.decode() +" "+ function.name.decode())
            except AttributeError as e:
                print("exception")
    return set(function_names)

def jaccard(set1, set2):
    intersection = set1.intersection(set2)
    intersection_length = float(len(intersection))
    union = set1.union(set2)
    union_length = float(len(union))
    return intersection_length / union_length

def pecheck(filename):
    f = open(filename, "rb")
    bytes = f.read(2)
    return bytes == b'MZ'

malware_paths = []
malware_attributes = dict()

for root, dirs, paths in os.walk('./data'):
    for path in paths:
        full_path = os.path.join(root, path)
        if pecheck(full_path):
            malware_paths.append(full_path)

for filename in malware_paths:
    malware_attributes[filename] = getIAT(filename)


similarity = []
for file1 in malware_paths:
    similarity_tmp = []
    for file2 in malware_paths:
        tmp = jaccard(malware_attributes[file1], malware_attributes[file2])
        if tmp > 0.65: # threshold
            tmp = 1
        similarity_tmp.append(tmp)

    similarity.append(similarity_tmp)

print(similarity)
plt.matshow(similarity, cmap='gray')
plt.savefig('./result65.jpg')
